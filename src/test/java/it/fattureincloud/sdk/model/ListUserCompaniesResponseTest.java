/*
 * Fatture in Cloud API v2 - API Reference
 * Connect your software with Fatture in Cloud, the invoicing platform chosen by more than 400.000 businesses in Italy.   The Fatture in Cloud API is based on REST, and makes possible to interact with the user related data prior authorization via OAuth2 protocol.
 *
 * The version of the OpenAPI document: 2.0.11
 * Contact: info@fattureincloud.it
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package it.fattureincloud.sdk.model;

import com.google.gson.Gson;
import it.fattureincloud.sdk.JSON;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;

import static org.junit.jupiter.api.Assertions.*;


/**
 * Model tests for ListUserCompaniesResponse
 */
public class ListUserCompaniesResponseTest {
    private ListUserCompaniesResponse model;

    @BeforeEach
    public void init() {
        model = new ListUserCompaniesResponse();
    }

    /**
     * Model tests for ListUserCompaniesResponse
     */
    @Test
    public void testListUserCompaniesResponse() {
        ListUserCompaniesResponse r = new ListUserCompaniesResponse()
                .data(new ListUserCompaniesResponseData()
                        .companies(Arrays.asList(new Company()
                                .id(12345)
                                .name("Studio Commercialista")
                                .taxCode("ABCSFN94T17A794K")
                                .type(CompanyType.ACCOUNTANT)
                                .accessToken("fc3c89ba29a926f9ef20203577c00ada")
                                .connectionId(94566)
                                .controlledCompanies(new ArrayList<>())
                        ))
                );

        JSON jsonManager = new JSON();
        Gson gson = jsonManager.getGson();
        String json = gson.toJson(r);
        String str = "{\"data\":{\"companies\":[{\"id\":12345,\"name\":\"Studio Commercialista\",\"type\":\"accountant\",\"access_token\":\"fc3c89ba29a926f9ef20203577c00ada\",\"controlled_companies\":[],\"connection_id\":94566,\"tax_code\":\"ABCSFN94T17A794K\"}]}}";
        assertEquals(str, json);
        ListUserCompaniesResponse generated = gson.fromJson(str, ListUserCompaniesResponse.class);
        assertEquals(r, generated);

        Object o = model;
        assertEquals(model, o);
        assertFalse(model.equals(null));
        assertFalse(model.equals(Integer.getInteger("5")));
    }

    /**
     * Test the property 'data'
     */
    @Test
    public void dataTest() {
        ListUserCompaniesResponseData rd1 = new ListUserCompaniesResponseData()
                .addCompaniesItem(new Company().id(1));

        ListUserCompaniesResponseData rd2 = new ListUserCompaniesResponseData()
                .addCompaniesItem(new Company().id(2))
                .addCompaniesItem(new Company().id(3));

        assertNull(model.getData());
        model.setData(rd1);
        assertEquals(rd1, model.getData());

        ListUserCompaniesResponse u = model.data(rd2);
        ListUserCompaniesResponse expected = new ListUserCompaniesResponse();
        expected.setData(rd2);
        assertEquals(expected, u);
    }

}
