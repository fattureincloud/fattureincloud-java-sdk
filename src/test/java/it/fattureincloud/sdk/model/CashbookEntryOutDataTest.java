/*
 * Fatture in Cloud API v2 - API Reference
 * Connect your software with Fatture in Cloud, the invoicing platform chosen by more than 400.000 businesses in Italy.   The Fatture in Cloud API is based on REST, and makes possible to interact with the user related data prior authorization via OAuth2 protocol.
 *
 * The version of the OpenAPI document: 2.0.7
 * Contact: info@fattureincloud.it
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package it.fattureincloud.sdk.model;

import com.google.gson.Gson;
import it.fattureincloud.sdk.JSON;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import java.math.BigDecimal;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertFalse;


/**
 * Model tests for CashbookEntryOutData
 */
public class CashbookEntryOutDataTest {
    private CashbookEntryOutData model;

    @BeforeEach
    public void init() {
        model = new CashbookEntryOutData()
                .amountOut(BigDecimal.valueOf(10))
                .paymentAccountOut(new PaymentAccount()
                        .id(21)
                        .name("Indesa - Carta conto")
                        .type(PaymentAccountType.STANDARD)
                        .iban("IT84Y0300203280294126225888")
                        .sia("sai")
                        .cuc("cuc")
                        .virtual(false));
    }

    /**
     * Model tests for CashbookEntryOutData
     */
    @Test
    public void testCashbookEntryOutData() {
        JSON jsonManager = new JSON();
        Gson gson = jsonManager.getGson();
        String json = gson.toJson(model);
        String str = "{\"amount_out\":10,\"payment_account_out\":{\"id\":21,\"name\":\"Indesa - Carta conto\",\"type\":\"standard\",\"iban\":\"IT84Y0300203280294126225888\",\"sia\":\"sai\",\"cuc\":\"cuc\",\"virtual\":false}}";
        assertEquals(str, json);
        CashbookEntryOutData generated = gson.fromJson(str, CashbookEntryOutData.class);
        assertEquals(model, generated);

        Object o = model;
        assertEquals(model, o);
        assertFalse(model.equals(null));
        assertFalse(model.equals(Integer.getInteger("5")));
    }

    /**
     * Test the property 'amountOut'
     */
    @Test
    public void amountOutTest() {
        assertEquals(BigDecimal.valueOf(10), model.getAmountOut());
        model.setAmountOut(BigDecimal.valueOf(22));
        assertEquals(BigDecimal.valueOf(22), model.getAmountOut());

        CashbookEntryOutData c = model.amountOut(BigDecimal.valueOf(23));
        CashbookEntryOutData expected = new CashbookEntryOutData()
                .amountOut(BigDecimal.valueOf(23))
                .paymentAccountOut(new PaymentAccount()
                        .id(21)
                        .name("Indesa - Carta conto")
                        .type(PaymentAccountType.STANDARD)
                        .iban("IT84Y0300203280294126225888")
                        .sia("sai")
                        .cuc("cuc")
                        .virtual(false));
        assertEquals(expected, c);
    }

    /**
     * Test the property 'paymentAccountOut'
     */
    @Test
    public void paymentAccountOutTest() {
        PaymentAccount p1 = new PaymentAccount()
                .id(21)
                .name("Indesa - Carta conto")
                .type(PaymentAccountType.STANDARD)
                .iban("IT84Y0300203280294126225888")
                .sia("sai")
                .cuc("cuc")
                .virtual(false);

        PaymentAccount p2 = new PaymentAccount()
                .id(22)
                .name("UniPirl - Carta conto")
                .type(PaymentAccountType.STANDARD)
                .iban("IT84Y0300203280294126225888")
                .sia("sai")
                .cuc("cuc")
                .virtual(false);

        PaymentAccount p3 = new PaymentAccount()
                .id(23)
                .name("A Monte - Carta conto")
                .type(PaymentAccountType.STANDARD)
                .iban("IT84Y0300203280294126225888")
                .sia("sai")
                .cuc("cuc")
                .virtual(false);

        assertEquals(p1, model.getPaymentAccountOut());
        model.setPaymentAccountOut(p2);
        assertEquals(p2, model.getPaymentAccountOut());

        CashbookEntryOutData c = model.paymentAccountOut(p3);
        CashbookEntryOutData expected = new CashbookEntryOutData()
                .amountOut(BigDecimal.valueOf(10))
                .paymentAccountOut(p3);
        assertEquals(expected, c);
    }

}
