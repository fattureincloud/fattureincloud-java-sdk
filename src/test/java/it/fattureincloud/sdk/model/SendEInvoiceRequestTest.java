/*
 * Fatture in Cloud API v2 - API Reference
 * Connect your software with Fatture in Cloud, the invoicing platform chosen by more than 400.000 businesses in Italy.   The Fatture in Cloud API is based on REST, and makes possible to interact with the user related data prior authorization via OAuth2 protocol.
 *
 * The version of the OpenAPI document: 2.0.11
 * Contact: info@fattureincloud.it
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package it.fattureincloud.sdk.model;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertFalse;

import com.google.gson.Gson;
import it.fattureincloud.sdk.JSON;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

/** Model tests for SendEInvoiceRequest */
public class SendEInvoiceRequestTest {
  private SendEInvoiceRequest model;

  @BeforeEach
  public void init() {
    model =
        new SendEInvoiceRequest()
            .data(
                new SendEInvoiceRequestData()
                    .cassaType("cassa taip")
                    .withholdingTaxCausal("causal"));
  }

  /** Model tests for SendEInvoiceRequest */
  @Test
  public void testSendEInvoiceRequest() {
    JSON jsonManager = new JSON();
    Gson gson = jsonManager.getGson();
    String json = gson.toJson(model);
    String str = "{\"data\":{\"cassa_type\":\"cassa taip\",\"withholding_tax_causal\":\"causal\"}}";
    assertEquals(str, json);
    SendEInvoiceRequest generated = gson.fromJson(str, SendEInvoiceRequest.class);
    assertEquals(model, generated);

    Object o = model;
    assertEquals(model, o);
    assertFalse(model.equals(null));
    assertFalse(model.equals(Integer.getInteger("5")));
  }

  /** Test the property 'data' */
  @Test
  public void dataTest() {
    assertEquals("causal", model.getData().getWithholdingTaxCausal());
    model.setData(new SendEInvoiceRequestData().withholdingTaxCausal("lausac"));
    assertEquals("lausac", model.getData().getWithholdingTaxCausal());

    model.data(new SendEInvoiceRequestData().withholdingTaxCausal("causal"));
    SendEInvoiceRequest actual = new SendEInvoiceRequest();
    actual.setData(new SendEInvoiceRequestData().withholdingTaxCausal("causal"));
    assertEquals(model, actual);
  }
}
