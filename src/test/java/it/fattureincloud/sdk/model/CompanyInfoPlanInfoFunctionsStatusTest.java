/*
 * Fatture in Cloud API v2 - API Reference
 * Connect your software with Fatture in Cloud, the invoicing platform chosen by more than 400.000 businesses in Italy.   The Fatture in Cloud API is based on REST, and makes possible to interact with the user related data prior authorization via OAuth2 protocol.
 *
 * The version of the OpenAPI document: 2.0.11
 * Contact: info@fattureincloud.it
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package it.fattureincloud.sdk.model;

import com.google.gson.Gson;
import it.fattureincloud.sdk.JSON;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;


/**
 * Model tests for CompanyInfoPlanInfoFunctionsStatus
 */
public class CompanyInfoPlanInfoFunctionsStatusTest {
    private final CompanyInfoPlanInfoFunctionsStatus model = new CompanyInfoPlanInfoFunctionsStatus();

    /**
     * Model tests for CompanyInfoPlanInfoFunctionsStatus
     */
    @Test
    public void testCompanyInfoPlanInfoFunctionsStatus() {
        CompanyInfoPlanInfoFunctionsStatus c = new CompanyInfoPlanInfoFunctionsStatus()
                .tsDigital(new FunctionStatus()
                        .active(true)
                )
                .tsPay(new FunctionStatus()
                        .active(false)
                );

        JSON jsonManager = new JSON();
        Gson gson = jsonManager.getGson();
        String json = gson.toJson(c);
        String str = "{\"ts_digital\":{\"active\":true},\"ts_pay\":{\"active\":false}}";
        assertEquals(str, json);
        CompanyInfoPlanInfoFunctionsStatus generated = gson.fromJson(str, CompanyInfoPlanInfoFunctionsStatus.class);
        assertEquals(c, generated);

        Object o = model;
        assertEquals(model, o);
        assertFalse(model.equals(null));
        assertFalse(model.equals(Integer.getInteger("5")));
    }

    /**
     * Test the property 'tsDigital'
     */
    @Test
    public void tsDigitalTest() {
        FunctionStatus fs1 = new FunctionStatus()
                .active(true);

        FunctionStatus fs2 = new FunctionStatus()
                .active(false);

        assertNull(model.getTsDigital());
        model.setTsDigital(fs1);
        assertEquals(fs1, model.getTsDigital());

        CompanyInfoPlanInfoFunctionsStatus c = model.tsDigital(fs2);
        CompanyInfoPlanInfoFunctionsStatus expected = new CompanyInfoPlanInfoFunctionsStatus();
        expected.setTsDigital(fs2);
        assertEquals(expected, c);
    }

    /**
     * Test the property 'tsPay'
     */
    @Test
    public void tsPayTest() {
        FunctionStatus fs1 = new FunctionStatus()
                .active(true);

        FunctionStatus fs2 = new FunctionStatus()
                .active(false);

        assertNull(model.getTsPay());
        model.setTsPay(fs1);
        assertEquals(fs1, model.getTsPay());

        CompanyInfoPlanInfoFunctionsStatus c = model.tsPay(fs2);
        CompanyInfoPlanInfoFunctionsStatus expected = new CompanyInfoPlanInfoFunctionsStatus();
        expected.setTsPay(fs2);
        assertEquals(expected, c);
    }

}
