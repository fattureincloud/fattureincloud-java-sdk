/*
 * Fatture in Cloud API v2 - API Reference
 * Connect your software with Fatture in Cloud, the invoicing platform chosen by more than 400.000 businesses in Italy.   The Fatture in Cloud API is based on REST, and makes possible to interact with the user related data prior authorization via OAuth2 protocol.
 *
 * The version of the OpenAPI document: 2.0.11
 * Contact: info@fattureincloud.it
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package it.fattureincloud.sdk.model;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertFalse;

import com.google.gson.Gson;
import it.fattureincloud.sdk.JSON;
import java.math.BigDecimal;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

/** Model tests for ListF24ResponseAggregation */
public class ListF24ResponseAggregationTest {
  private ListF24ResponseAggregation model;

  @BeforeEach
  public void init() {
    model =
        new ListF24ResponseAggregation()
            .aggregatedData(new ListF24ResponseAggregatedData().amount(new BigDecimal(10)));
  }

  /** Model tests for ListF24ResponseAggregation */
  @Test
  public void testListF24ResponseAggregation() {
    JSON jsonManager = new JSON();
    Gson gson = jsonManager.getGson();
    String json = gson.toJson(model);
    String str = "{\"aggregated_data\":{\"amount\":10}}";
    assertEquals(str, json);
    ListF24ResponseAggregation generated = gson.fromJson(str, ListF24ResponseAggregation.class);
    assertEquals(model, generated);

    Object o = model;
    assertEquals(model, o);
    assertFalse(model.equals(null));
    assertFalse(model.equals(Integer.getInteger("5")));
  }

  /** Test the property 'aggregatedData' */
  @Test
  public void aggregatedDataTest() {
    assertEquals(new BigDecimal(10), model.getAggregatedData().getAmount());
    model.getAggregatedData().setAmount(new BigDecimal(130));
    assertEquals(new BigDecimal(130), model.getAggregatedData().getAmount());

    ListF24ResponseAggregation expected =
        new ListF24ResponseAggregation()
            .aggregatedData(new ListF24ResponseAggregatedData().amount(new BigDecimal(130)));
    assertEquals(expected, model);
  }
}
