/*
 * Fatture in Cloud API v2 - API Reference
 * Connect your software with Fatture in Cloud, the invoicing platform chosen by more than 500.000 businesses in Italy.   The Fatture in Cloud API is based on REST, and makes possible to interact with the user related data prior authorization via OAuth2 protocol.
 *
 * The version of the OpenAPI document: 2.1.5
 * Contact: info@fattureincloud.it
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package it.fattureincloud.sdk.model;

import com.google.gson.annotations.SerializedName;
import java.io.Serializable;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Objects;
import org.openapitools.jackson.nullable.JsonNullable;

/** EntityClientPreCreateInfo */
@javax.annotation.Generated(
    value = "org.openapitools.codegen.languages.JavaClientCodegen",
    date = "2025-03-06T15:40:46.627547Z[Etc/UTC]",
    comments = "Generator version: 7.12.0")
public class EntityClientPreCreateInfo implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_COUNTRIES_LIST = "countries_list";

  @SerializedName(SERIALIZED_NAME_COUNTRIES_LIST)
  private List<String> countriesList;

  public static final String SERIALIZED_NAME_PAYMENT_METHODS_LIST = "payment_methods_list";

  @SerializedName(SERIALIZED_NAME_PAYMENT_METHODS_LIST)
  private List<PaymentMethod> paymentMethodsList;

  public static final String SERIALIZED_NAME_PAYMENT_ACCOUNTS_LIST = "payment_accounts_list";

  @SerializedName(SERIALIZED_NAME_PAYMENT_ACCOUNTS_LIST)
  private List<PaymentAccount> paymentAccountsList;

  public static final String SERIALIZED_NAME_VAT_TYPES_LIST = "vat_types_list";

  @SerializedName(SERIALIZED_NAME_VAT_TYPES_LIST)
  private List<VatType> vatTypesList;

  public static final String SERIALIZED_NAME_PRICE_LISTS = "price_lists";

  @SerializedName(SERIALIZED_NAME_PRICE_LISTS)
  private List<PriceList> priceLists;

  public static final String SERIALIZED_NAME_LIMIT = "limit";

  @SerializedName(SERIALIZED_NAME_LIMIT)
  private BigDecimal limit;

  public static final String SERIALIZED_NAME_USAGE = "usage";

  @SerializedName(SERIALIZED_NAME_USAGE)
  private BigDecimal usage;

  public EntityClientPreCreateInfo() {}

  public EntityClientPreCreateInfo countriesList(List<String> countriesList) {

    this.countriesList = countriesList;
    return this;
  }

  public EntityClientPreCreateInfo addCountriesListItem(String countriesListItem) {
    if (this.countriesList == null) {
      this.countriesList = new ArrayList<>();
    }
    this.countriesList.add(countriesListItem);
    return this;
  }

  /**
   * Countries list
   *
   * @return countriesList
   */
  @javax.annotation.Nullable
  public List<String> getCountriesList() {
    return countriesList;
  }

  public void setCountriesList(List<String> countriesList) {
    this.countriesList = countriesList;
  }

  public EntityClientPreCreateInfo paymentMethodsList(List<PaymentMethod> paymentMethodsList) {

    this.paymentMethodsList = paymentMethodsList;
    return this;
  }

  public EntityClientPreCreateInfo addPaymentMethodsListItem(PaymentMethod paymentMethodsListItem) {
    if (this.paymentMethodsList == null) {
      this.paymentMethodsList = new ArrayList<>();
    }
    this.paymentMethodsList.add(paymentMethodsListItem);
    return this;
  }

  /**
   * Entity payment methods list
   *
   * @return paymentMethodsList
   */
  @javax.annotation.Nullable
  public List<PaymentMethod> getPaymentMethodsList() {
    return paymentMethodsList;
  }

  public void setPaymentMethodsList(List<PaymentMethod> paymentMethodsList) {
    this.paymentMethodsList = paymentMethodsList;
  }

  public EntityClientPreCreateInfo paymentAccountsList(List<PaymentAccount> paymentAccountsList) {

    this.paymentAccountsList = paymentAccountsList;
    return this;
  }

  public EntityClientPreCreateInfo addPaymentAccountsListItem(
      PaymentAccount paymentAccountsListItem) {
    if (this.paymentAccountsList == null) {
      this.paymentAccountsList = new ArrayList<>();
    }
    this.paymentAccountsList.add(paymentAccountsListItem);
    return this;
  }

  /**
   * Entity payment accounts list
   *
   * @return paymentAccountsList
   */
  @javax.annotation.Nullable
  public List<PaymentAccount> getPaymentAccountsList() {
    return paymentAccountsList;
  }

  public void setPaymentAccountsList(List<PaymentAccount> paymentAccountsList) {
    this.paymentAccountsList = paymentAccountsList;
  }

  public EntityClientPreCreateInfo vatTypesList(List<VatType> vatTypesList) {

    this.vatTypesList = vatTypesList;
    return this;
  }

  public EntityClientPreCreateInfo addVatTypesListItem(VatType vatTypesListItem) {
    if (this.vatTypesList == null) {
      this.vatTypesList = new ArrayList<>();
    }
    this.vatTypesList.add(vatTypesListItem);
    return this;
  }

  /**
   * Vat types list
   *
   * @return vatTypesList
   */
  @javax.annotation.Nullable
  public List<VatType> getVatTypesList() {
    return vatTypesList;
  }

  public void setVatTypesList(List<VatType> vatTypesList) {
    this.vatTypesList = vatTypesList;
  }

  public EntityClientPreCreateInfo priceLists(List<PriceList> priceLists) {

    this.priceLists = priceLists;
    return this;
  }

  public EntityClientPreCreateInfo addPriceListsItem(PriceList priceListsItem) {
    if (this.priceLists == null) {
      this.priceLists = new ArrayList<>();
    }
    this.priceLists.add(priceListsItem);
    return this;
  }

  /**
   * Entity price lists
   *
   * @return priceLists
   */
  @javax.annotation.Nullable
  public List<PriceList> getPriceLists() {
    return priceLists;
  }

  public void setPriceLists(List<PriceList> priceLists) {
    this.priceLists = priceLists;
  }

  public EntityClientPreCreateInfo limit(BigDecimal limit) {

    this.limit = limit;
    return this;
  }

  /**
   * Entity limit
   *
   * @return limit
   */
  @javax.annotation.Nullable
  public BigDecimal getLimit() {
    return limit;
  }

  public void setLimit(BigDecimal limit) {
    this.limit = limit;
  }

  public EntityClientPreCreateInfo usage(BigDecimal usage) {

    this.usage = usage;
    return this;
  }

  /**
   * Entity usage
   *
   * @return usage
   */
  @javax.annotation.Nullable
  public BigDecimal getUsage() {
    return usage;
  }

  public void setUsage(BigDecimal usage) {
    this.usage = usage;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EntityClientPreCreateInfo entityClientPreCreateInfo = (EntityClientPreCreateInfo) o;
    return Objects.equals(this.countriesList, entityClientPreCreateInfo.countriesList)
        && Objects.equals(this.paymentMethodsList, entityClientPreCreateInfo.paymentMethodsList)
        && Objects.equals(this.paymentAccountsList, entityClientPreCreateInfo.paymentAccountsList)
        && Objects.equals(this.vatTypesList, entityClientPreCreateInfo.vatTypesList)
        && Objects.equals(this.priceLists, entityClientPreCreateInfo.priceLists)
        && Objects.equals(this.limit, entityClientPreCreateInfo.limit)
        && Objects.equals(this.usage, entityClientPreCreateInfo.usage);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b
        || (a != null
            && b != null
            && a.isPresent()
            && b.isPresent()
            && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(
        countriesList,
        paymentMethodsList,
        paymentAccountsList,
        vatTypesList,
        priceLists,
        limit,
        usage);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[] {a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EntityClientPreCreateInfo {\n");
    sb.append("    countriesList: ").append(toIndentedString(countriesList)).append("\n");
    sb.append("    paymentMethodsList: ").append(toIndentedString(paymentMethodsList)).append("\n");
    sb.append("    paymentAccountsList: ")
        .append(toIndentedString(paymentAccountsList))
        .append("\n");
    sb.append("    vatTypesList: ").append(toIndentedString(vatTypesList)).append("\n");
    sb.append("    priceLists: ").append(toIndentedString(priceLists)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    usage: ").append(toIndentedString(usage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
